<?xml version="1.0" encoding="UTF-8" ?>

<configuration debug="FALSE">

    <!--
        Logback是由log4j创始人设计的又一个开源日志组件。
        logback当前分成三个模块：logback-core,logback- classic和logback-access。logback-core是其它两个模块的基础模块。
        logback-classic是log4j的一个 改良版本。
        此外logback-classic完整实现SLF4J API使你可以很方便地更换成其它日志系统如log4j或JDK14 Logging。
        logback-access访问模块与Servlet容器集成提供通过Http来访问日志的功能。
        logback 自动是debug级别,在src目录加个logback的配置文件，然后自定义打印级别就可以解决 如果不加默认是用它自己的配置
        直接将logback.xml放在resouce目录下，系统会自动搜索该目录下的xml配置文件，如果没有就会用默认。
    -->
    <property resource="resources.properties" />

    <!-- 控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 出错日志 appender  -->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <!-- log.dir 在maven profile里配置 -->
            <fileNamePattern>${log.dir}/hiabby-error-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>60</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 访问日志 appender  -->
    <appender name="ACCESS" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${log.dir}/hiabby-access-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>60</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 访问日志 appender  -->
    <appender name="SYS-USER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${log.dir}/hiabby-sys-user-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>60</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
        </encoder>
    </appender>


    <!-- 订单日志日志 appender  -->
    <appender name="ORDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${log.dir}/hiabby-order-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>60</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
        </encoder>
    </appender>

    <!--订单日志-->
    <logger name="hiabby-order" level="DEBUG">
        <appender-ref ref="ORDER"/>
        <appender-ref ref="STDOUT"/>
    </logger>

    <!--错误日志-->
    <logger name="hiabby-error" level="ERROR">
        <appender-ref ref="ERROR"/>
        <appender-ref ref="STDOUT"/>
    </logger>
    <!--访问日志-->
    <logger name="hiabby-access" level="INFO">
        <appender-ref ref="ACCESS"/>
    </logger>
    <!--系统用户操作日志-->
    <logger name="hiabby-sys-user" level="INFO">
        <appender-ref ref="SYS-USER"/>
        <appender-ref ref="STDOUT"/>
    </logger>

    <!-- hiabby -->
    <logger name="com.hiabby.web" level="INFO">
        <appender-ref ref="STDOUT"/>
    </logger>

    <root level="INFO">
    	<appender-ref ref="STDOUT"/>
    </root>


    <!--log4jdbc
     <logger name="druid.sql" level="warn"/>
     <logger name="druid.sql.DataSource" level="warn"/>
     <logger name="druid.sql.Connection" level="warn"/>
     <logger name="druid.sql.ResultSet" level="warn"/>-->
    <logger name="druid.sql.Statement" level="debug">
        <appender-ref ref="STDOUT"/>
    </logger>
</configuration>